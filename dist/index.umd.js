(function(o,d){typeof exports=="object"&&typeof module<"u"?d(exports):typeof define=="function"&&define.amd?define(["exports"],d):(o=typeof globalThis<"u"?globalThis:o||self,d(o.content_engine_lib={}))})(this,(function(o){"use strict";const d=()=>({set:()=>"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){const l=Math.random()*16|0;return(e=="x"?l:l&3|8).toString(16)})}),u=async()=>({f:{name:e=>`${e.name}${e.id}`}});console.log("content_engine_lib");let a={lib:{inbuilt_lib:[],l:{},set:async e=>{const l=e?.lib||[];for(const[i,c]of l.entries()){const r=c,b=`${r.name}:${e.run_from}`,s=`${e.run_from}_src`;let n=r[s];const _=`${e.run_from}_src`;let t=e?.lazy_lib?.[_]||null;if(t&&(t=t.replace("{*}",`${r.name}`)),console.log(`_lazy_src: ${t}`),console.log(`_src: ${n}`),a.lib.l.hasOwnProperty(`${b}`)==!1){if(/^[a-zA-Z0-9]/.test(n)&&n.includes("/")==!1&&a.lib.inbuilt_lib.indexOf(`${r.name}`)===-1)if(t)n=t;else throw`[lib-name=${r.name},lib-src=${n}] not allowed or available in in-build mode. Need to use lazy-lib config.`;if(n.startsWith("./")||n.startsWith("../")){const y=await import(`${n}`);a.lib.l[`${b}`]={lib:y}}if(n.startsWith("http://")||n.startsWith("https://")){const y=await import(`${n}`);a.lib.l[`${b}`]={lib:y}}}}console.log(await a.lib.get_all({}))},get:async e=>{let l=null;const i=`${e.name}:${e.run_from}`;return a.lib.l.hasOwnProperty(`${i}`)==!1&&await a.lib.set({lib:[{renderer_src:e.name,hydrator_src:e.name,editor_src:e.name,name:e.name}],run_from:e.run_from,lazy_lib:e.lazy_lib}),l=a.lib.l[`${i}`],l},get_all:async e=>a.lib.l}};const f=async e=>{const l=await u();return await a.lib.set({lib:e.lib,run_from:"renderer",lazy_lib:e.lazy_lib}),{set:async(i,c)=>{console.log("--renderer [set]");let r={r:"",style:""};return await(async()=>{for(const s of i.data?.value?.l||i.data.l){const _=await(await(await(await a.lib.get({name:s.type,run_from:"renderer",lazy_lib:e.lazy_lib})).lib).index({f:{name:t=>l.f.name({id:s.id,name:t}),get_lib:async t=>await await a.lib.get({name:t.name,run_from:t.run_from,lazy_lib:e.lazy_lib})}})).set({data:{curr:s}},c);r.r+=_.r,r.style+=_.style}})(),r}}},x=async e=>{const l=await u();return await a.lib.set({lib:e.lib,run_from:"hydrator",lazy_lib:e.lazy_lib}),{set:async(i,c)=>{console.log("--hydrator [set]");let r={r:"",style:""};return await(async()=>{for(const s of i.data?.value?.l||i.data.l){const _=await(await(await(await a.lib.get({name:s.type,run_from:"hydrator",lazy_lib:e.lazy_lib})).lib).index({f:{name:t=>l.f.name({id:s.id,name:t}),get_lib:async t=>await await a.lib.get({name:t.name,run_from:t.run_from,lazy_lib:e.lazy_lib})}})).set({data:{curr:s}},c);r.style+=_.style}})(),r}}},g=async e=>(await u(),await a.lib.set({lib:e.lib,run_from:"editor",lazy_lib:e.lazy_lib}),{set:async(l,i)=>{console.log("--editor [set]");let c={data:{l:[{id:d().set(),type:"editor",data:{l:[]}}]}},r={r:"",style:""};const b=f,s=x,n=await b({lib:e.lib,lazy_lib:e.lazy_lib}),_=await s({lib:e.lib,lazy_lib:e.lazy_lib}),t=await n.set({data:c.data});return setTimeout(async()=>{const y=await _.set({data:c.data},{change:m=>{i?.change(m)}});(m=>{const w=document.createElement("style");w.innerHTML=`${y.style}`,m.appendChild(w)})(document.head)},200),r.r=t.r,r.style=`
            ${t.style}
            `,r}});o.ce_editor=g,o.ce_hydrator=x,o.ce_renderer=f,Object.defineProperty(o,Symbol.toStringTag,{value:"Module"})}));
